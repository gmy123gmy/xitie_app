<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<configuration status="INFO" monitorInterval="600">
	<!--先定义所有的appender -->
	<appenders>
		<!--这个输出控制台的配置 -->
		<Console name="Console" target="SYSTEM_OUT">
			<!--日志输出的格式 -->
			<!-- 
				%d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间,输出到毫秒的时间
				%-5level : 输出日志级别，-5表示左对齐并且固定输出5个字符，如果不足在右边补0 
				%c : logger的名称(%logger) 
				%t : 输出当前线程名称 
				%p : 日志输出格式 
				%m : 日志内容，即 logger.info("message") 
				%n : 换行符
				%C : Java类名(%F) 
				%L : 行号 
				%M : 方法名 
				%l : 输出语句所在的行数, 包括类名、方法名、文件名、行数 
				hostName : 本地机器名 hostAddress : 本地ip地址 -->
			<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} - %m%n" />
		</Console>
		<!-- 
			循环日志文件：日志文件大于阀值的时候，就开始写一个新的日志文件 这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 
			fileName : 指定当前日志文件的位置和文件名称 
			filePattern : 指定当发生Rolling时，文件的转移和重命名规则 
			SizeBasedTriggeringPolicy : 指定当文件体积大于size指定的值时，触发
			Rolling DefaultRolloverStrategy : 指定最多保存的文件个数 
			TimeBasedTriggeringPolicy : 这个配置需要和filePattern结合使用 注意filePattern中配置的文件重命名规则是${FILE_NAME}_%d{yyyy-MM-dd}_%i，最小的时间粒度是dd，即天， 
			TimeBasedTriggeringPolicy指定的size是1，结合起来就是每1天生成一个新文件
		-->
		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RollingFileInfo" fileName="${sys:catalina.home}/logs/info.log" filePattern="${sys:catalina.home}/logs/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY" />
			<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} - %m%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile>
		<RollingFile name="RollingFileWarn" fileName="${sys:catalina.home}/logs/warn.log" filePattern="${sys:catalina.home}/logs/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY" />
			<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} - %m%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
			<DefaultRolloverStrategy max="20" />
		</RollingFile>
		<RollingFile name="RollingFileError" fileName="${sys:catalina.home}/logs/error.log" filePattern="${sys:catalina.home}/logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="error" onMatch="ACCEPT"	onMismatch="DENY" />
			<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} %l - %m%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile>
	</appenders>
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
		<!--过滤掉spring和mybatis的一些无用的DEBUG信息 -->
<!-- 		<logger name="org.springframework" level="INFO"></logger> -->
<!-- 		<logger name="org.mybatis" level="INFO"></logger> -->
		<root level="all">
			<appender-ref ref="Console" />
			<appender-ref ref="RollingFileInfo" />
			<appender-ref ref="RollingFileWarn" />
			<appender-ref ref="RollingFileError" />
		</root>
	</loggers>
</configuration>